{
	"$schema": "https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"enterpriseScaleCompanyPrefix": {
			"type": "string",
			"maxLength": 5,
			"metadata": {
				"description": "Provide the prefix (max 5 characters) to the management group hierarchy that will be created"
			}
		},
		"managementSubscriptionId": {
			"type": "string",
			"defaultValue": "7d8bccc8-ddf0-40fb-acf8-61829c21db71",
			"maxLength": 36,
			"metadata": {
				"description": "Provide the subscription id of an existing, empty subscription you want to dedicate for management. If you don't want to bring a subscription, leave this parameter empty as is."
			}
		},
		"connectivitySubscriptionId": {
			"type": "string",
			"defaultValue": "0e4d1e00-5638-4667-ba48-357115eb32a1",
			"maxLength": 36,
			"metadata": {
				"description": "Provide the subscription id of an existing, empty subscription you want to dedicate for networking."
			}
		},
		"identitySubscriptionId": {
			"type": "string",
			"defaultValue": "ccf951dc-2860-42f1-9e1a-5adf65d9220f",
			"maxLength": 36,
			"metadata": {
				"description": "Provide the subscription id of an existing, empty subscription you want to dedicate for identity."
			}
		},
		"onlineLzSubscriptionId": {
			"type": "string",
			"defaultValue": "00427000-3587-4a3b-9817-803373c88774",
			"metadata": {
				"description": "Provide the subscription ids for existing, empty subscriptions you want to move in as your first online landing zones."
			}
		},
		"prodLzSubscriptionId": {
			"type": "string",
			"defaultValue": "4dd899d2-4f99-485e-b1bc-7d44c2a2e993",
			"metadata": {
				"description": "Provide the subscription ids for existing, empty subscriptions you want to move in as your first prod landing zones."
			}
		},
		"uatLzSubscriptionId": {
			"type": "string",
			"defaultValue": "146cdf8a-a785-468c-8e4c-ee958acad65b",
			"metadata": {
				"description": "Provide the subscription ids for existing, empty subscriptions you want to move in as your first uat landing zones."
			}
		},
		"devLzSubscriptionId": {
			"type": "string",
			"defaultValue": "6d73017e-c20f-4fe1-9f54-0f4a9d992e66",
			"metadata": {
				"description": "Provide the subscription ids for existing, empty subscriptions you want to move in as your first dev landing zones."
			}
		}
	},
	"variables": {
		"azPolicyEnvMapping": {
			"https://management.azure.com/": "auxiliary/policies.json"
		},
		"azEnvPolicy": "[variables('azPolicyEnvMapping')[environment().resourceManager]]",
		"deploymentUris": {
			"managementGroups": "[uri(deployment().properties.templateLink.uri, 'auxiliary/mgmtGroups.json')]",
			"policyDefinitions": "[concat(uri(deployment().properties.templateLink.uri, variables('azEnvPolicy')))]",
			"monitoring": "[uri(deployment().properties.templateLink.uri, 'auxiliary/logAnalytics.json')]",
			"monitoringSolutions": "[uri(deployment().properties.templateLink.uri, 'auxiliary/logAnalyticsSolutions.json')]",
			"connectivity": "[uri(deployment().properties.templateLink.uri, 'auxiliary/vwan-connectivity.json')]",
			"diagnosticsAndSecurity": "[uri(deployment().properties.templateLink.uri, 'auxiliary/diagnosticsAndSecurity.json')]",
			"landingZone": "[uri(deployment().properties.templateLink.uri, 'auxiliary/lz.json')]",
			"identity": "[uri(deployment().properties.templateLink.uri, 'auxiliary/identity.json')]"
		},
		"moveSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-management', '/', parameters('managementSubscriptionId'))]",
		"noSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-management', '/', 'na')]",
		"connectivityMoveSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-connectivity', '/', parameters('connectivitySubscriptionId'))]",
		"noConnectivitySubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-connectivity', '/', 'naconn')]",
		"identityMoveSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-identity', '/', parameters('identitySubscriptionId'))]",
		"noIdentitySubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-identity', '/', 'naid')]",
		"onlineMoveSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-online', '/', parameters('onlineLzSubscriptionId'))]",
		"noOnlineSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-online', '/', 'naon')]",
		"prodMoveSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-prod', '/', parameters('prodLzSubscriptionId'))]",
		"noProdSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-prod', '/', 'naprod')]",
		"uatMoveSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-uat', '/', parameters('uatLzSubscriptionId'))]",
		"noUatSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-uat', '/', 'nauat')]",
		"devMoveSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-dev', '/', parameters('devLzSubscriptionId'))]",
		"noDevSubscription": "[concat(parameters('enterpriseScaleCompanyPrefix'), '-dev', '/', 'nadev')]",
		"deploymentNames": {
			"mgmtGroupDeploymentName": "[take(concat('EntScale-Mgs', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
			"policyDeploymentName": "[take(concat('EntScale-Policy', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
			"monitoringDeploymentName": "[take(concat('EntScale-Monitoring', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
			"monitoringSolutionsDeploymentName": "[take(concat('EntScale-Solutions', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
			"diagAndSecDeploymentName": "[take(concat('EntScale-DiagSec', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
			"connectivityDeploymentName": "[take(concat('EntScale-conn', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
			"lzDeploymentName": "[take(concat('EntScale-LZ', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]",
			"identityDeploymentName": "[take(concat('EntScale-ID', '-', deployment().location, guid(parameters('enterpriseScaleCompanyPrefix'))), 64)]"
		}
	},
	"resources": [{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "[variables('deploymentNames').mgmtGroupDeploymentName]",
			"location": "[deployment().location]",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"contentVersion": "1.0.0.0",
					"uri": "[variables('deploymentUris').managementGroups]"
				},
				"parameters": {
					"topLevelManagementGroupPrefix": {
						"value": "[parameters('enterpriseScaleCompanyPrefix')]"
					}
				}
			}
		},

		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2019-10-01",
			"name": "[concat('preparingToLaunch', copyIndex())]",
			"location": "[deployment().location]",
			"scope": "[concat('Microsoft.Management/managementGroups/', parameters('enterpriseScaleCompanyPrefix'))]",
			"dependsOn": [
				"[variables('deploymentNames').mgmtGroupDeploymentName]"
			],
			"copy": {
				"batchSize": 1,
				"count": 20,
				"mode": "Serial",
				"name": "DeploymentDelay"
			},
			"properties": {
				"mode": "Incremental",
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {},
					"resources": [],
					"outputs": {}
				}
			}
		},
		{
			"condition": "[not(empty(parameters('managementSubscriptionId')))]",
			"type": "Microsoft.Management/managementGroups/subscriptions",
			"apiVersion": "2020-05-01",
			"name": "[if(not(empty(parameters('managementSubscriptionId'))), variables('moveSubscription'), variables('noSubscription'))]",
			"dependsOn": [
				"[variables('deploymentNames').mgmtGroupDeploymentName]"
			],
			"properties": {}
		},
		{
			"condition": "[not(empty(parameters('identitySubscriptionId')))]",
			"type": "Microsoft.Management/managementGroups/subscriptions",
			"apiVersion": "2020-05-01",
			"name": "[if(not(empty(parameters('identitySubscriptionId'))), variables('identityMoveSubscription'), variables('noIdentitySubscription'))]",
			"dependsOn": [
				"[variables('deploymentNames').mgmtGroupDeploymentName]"
			],
			"properties": {}
		},
		{
			"condition": "[not(empty(parameters('devLzSubscriptionId')))]",
			"type": "Microsoft.Management/managementGroups/subscriptions",
			"apiVersion": "2020-05-01",
			"name": "[if(not(empty(parameters('devLzSubscriptionId'))), variables('devMoveSubscription'), variables('noDevSubscription'))]",
			"dependsOn": [
				"[variables('deploymentNames').mgmtGroupDeploymentName]"
			],
			"copy": {
				"name": "devLzMove",
				"count": "[length(parameters('devLzSubscriptionId'))]"
			},
			"properties": {}
		},
		{
			"condition": "[not(empty(parameters('uatLzSubscriptionId')))]",
			"type": "Microsoft.Management/managementGroups/subscriptions",
			"apiVersion": "2020-05-01",
			"name": "[if(not(empty(parameters('uatLzSubscriptionId'))), variables('uatMoveSubscription'), variables('noUatSubscription'))]",
			"dependsOn": [
				"[variables('deploymentNames').mgmtGroupDeploymentName]"
			],
			"copy": {
				"name": "uatLzMove",
				"count": "[length(parameters('uatLzSubscriptionId'))]"
			},
			"properties": {}
		},
		{
			"condition": "[not(empty(parameters('prodLzSubscriptionId')))]",
			"type": "Microsoft.Management/managementGroups/subscriptions",
			"apiVersion": "2020-05-01",
			"name": "[if(not(empty(parameters('prodLzSubscriptionId'))), variables('prodMoveSubscription'), variables('noProdSubscription'))]",
			"dependsOn": [
				"[variables('deploymentNames').mgmtGroupDeploymentName]"
			],
			"copy": {
				"name": "prodLzMove",
				"count": "[length(parameters('prodLzSubscriptionId'))]"
			},
			"properties": {}
		},
		{
			"condition": "[not(empty(parameters('onlineLzSubscriptionId')))]",
			"type": "Microsoft.Management/managementGroups/subscriptions",
			"apiVersion": "2020-05-01",
			"name": "[if(not(empty(parameters('onlineLzSubscriptionId'))), variables('onlineMoveSubscription'), variables('noOnlineSubscription'))]",
			"dependsOn": [
				"[variables('deploymentNames').mgmtGroupDeploymentName]"
			],
			"copy": {
				"name": "onlineLzMove",
				"count": "[length(parameters('onlineLzSubscriptionId'))]"
			},
			"properties": {}
		}
		]
	}
